@mixin imgFit {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

@mixin objSize($max-width, $height) {
    width: 100%;
    max-width: $max-width;
    height: $height;
}

@mixin bgImg {
    background-position: center 0;
    background-repeat: no-repeat;
    background-size: cover;
}

@mixin flexCenter {
    align-items: center;
    justify-content: center;
}

@mixin flexJustify {
    align-items: center;
    justify-content: space-between;
}

@mixin grid($num) {
    display: grid;
    grid-template: repeat($num, 1fr);
    gap: 1.125rem;
}

@mixin hoverEffect {
    &::after {
        position: absolute;
        width: 100%;
        transform: scaleX(0);
        height: 2px;
        bottom: -2px;
        left: 0;
        background-color: $colorPrimary;
        transition: transform 0.25s ease-out;
        transform-origin: bottom right;
        content: '';
    }
    &:hover::after {
        transform: scaleX(1);
        transform-origin: bottom left;
    }
}

@mixin shadow {
    box-shadow: 0 4px 6px rgba(54, 54, 54, 0.2);
}

@mixin btn($textColor, $bgColor, $textHoverColor, $bgHoverColor, $type) {
    @if $type == 'full' {
        background: $bgColor;
        border: 1px solid transparent;
        color: $textColor;
    
        &:hover {
            background: $bgHoverColor;
            border-color: $bgColor;
            color: $textHoverColor
        }
    } @else {
        background: $bgColor;
        border: 1px solid $textColor;
        color: $textColor;

        &:hover {
            background: $bgHoverColor;
            color: $textHoverColor;
        }
    }
    
}

@mixin customCheckbox($borderColor: $colorPrimary, $bgColor: $colorPrimary, $posTop: 50%) {
    input {
        position: absolute;
        opacity: 0;
    }
    span {
        position: relative;
        padding-left: 30px;
        cursor: pointer;
        transition: $transition;

        &::before {
            position: absolute;
            top: $posTop;
            left: 0;
            display: block;
            width: 20px;
            height: 20px;
            border: 1px solid $colorBorder;
            border-radius: $borderRadiusS;
            transform: translateY(-$posTop);
            transition: $transition;
            content: "";
        }
        &:hover {
            color: $colorGray;
        }
        &:hover::before {
            border-color: $borderColor;
        }   
    }
    input:checked + span::before {
        background: $bgColor;
        border-color: $borderColor;
    }
    input:checked + span::after {
        position: absolute;
        top: 3px;
        left: 4px;
        display: block;
        width: 12px;
        height: 8px;
        border-left: 1px solid $colorWhite;
        border-bottom: 1px solid $colorWhite;
        transform: rotate(-45deg);
        transition: $transition;
        content: "";
    }
}

@mixin arrow($size) {
    position: absolute;
    top: 50%;
    right: 1rem;
    display: block;
    width: $size;
    height: $size;
    border-left: 2px solid #000;
    border-bottom: 2px solid #000;
    border-bottom-left-radius: 3px;
    transform: translateY(-50%) rotate(-45deg);
    transition: 0.2s linear;
    content: "";
}

@mixin customRadioBtn {
    input {
        display: none;
    }
    span {
        position: relative;
        padding-left: 30px;
        cursor: pointer;
        transition: $transition;

        &::before {
            position: absolute;
            top: 2px;
            left: 0;
            display: block;
            width: 20px;
            height: 20px;
            background: $colorBorder;
            border-radius: $borderRadiusCircle;
            content: "";
            transition: $transition;
        }
        &::after {
            position: absolute;
            top: -1px;
            left: -3px;
            display: block;
            width: 26px;
            height: 26px;
            border: 1px solid $colorBorder;
            border-radius: $borderRadiusCircle;
            content: "";
            transition: $transition;
        }
    }
    input:checked + span::before {
        background: $colorRedTransparent;
    }
    input:checked + span::after {
        border-color: $colorRedTransparent;
    }
}